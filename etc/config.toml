[evalserver]
port = "14401"
host = "192.168.32.1"
debug = 1

[jobmanager]
max_workers = 18
timeout = 11
min_deadline = 100 # minimum number of milliseconds to allow a deadline to request

[sandbox]
# Relative paths are turned to absolute ONLY by using the mount_base path
# target path's are absolute and only exist in the sandbox
home_dir = "/eval"
mount_base = "/home/ryan/evalserver/sandbox/system"
plugin_base = "/home/ryan/evalserver/sandbox/plugins" # TODO is this good?
plugins = ["Perlbot", "PerlbotEggs", "Cobol"]

# Be careful with these, if you mount stuff under an existing directory on your
# system a directory will be created there in order to facilitate the private
# bind mount.  This is part of why I recommend using debootstrap or similar
# To create a shadow system for the evalserver

bind_mounts = [
	{src = "lib64",           target = "/lib64"},
	{src = "lib",             target = "/lib"},
	{src = "usr",         target = "/usr"},
	{src = "etc",         target = "/etc"},
	{src = "bin",         target = "/bin"},
	{src = "/home/ryan/bots/perlbuut/langs", target = "/langs"},
	{src = "/home/ryan/perl5", target = "/perl5"},
	{src = "/home/ryan/perl5", target = "/home/ryan/perl5"},
	{src = "/home/ryan/bots/perlbuut/jail_root",     target = "/eval"}
]

safe_proc=true

[sandbox.seccomp]
yaml = "/home/ryan/evalserver/sandbox/etc/seccomp.yaml"

[sandbox.devices]
# Entries in /dev that must exist
# each entry is an array, [type, major, minor]
null = ["c", 1, 3]
urandom = ["c", 1, 9]
random = ["c", 1, 9] # make this just the same as urandom, it doesn't matter to us

[sandbox.environment]
TZ="Asia/Pyongyang"
EMAIL_SENDER_TRANSPORT="Test"
PATH="/perl5/perlbrew/perls/perlbot-inuse/bin:/bin:/sbin:/usr/bin:/usr/games:/usr/sbin:/usr/local/bin"
LS_COLORS="rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:"
SHELL="/bin/bash"

[sandbox.rlimits]
VMEM = "750M"
AS = "750M"
DATA = "500M"
STACK = "30M"
NPROC = 50
NOFILE = 70
OFILE = 70
OPEN_MAX = 70
LOCKS = 10
MEMLOCK = 100
CPU = 10

[language]
# Each language requires a few keys
#
# One of sub or bin
# * sub is the name of a perl subroutine in the wrapper script
# * bin is the path to a binary to run after sandboxing
# And
# * args => ['-w', '%file%']
#
# Optional args
# TODO figure out a sane way to do the wrapper scripts for -e and Dumper of results etc.

"perl"={sub="run_perl", seccomp_profile="lang_perl"}
"deparse"={sub="deparse_perl_code", seccomp_profile="lang_perl"}

#[language.perl]
#bin="/perl5/perlbrew/perls/perlbot-inuse/bin/perl"
#args=["-e", "%CODE%"]
#seccomp_profile="lang_perl"
#wrap_code="perl_wrap"

# TODO perls 1-3
[language."perl1"]
bin="/langs/perl-1.0.16/bin/perl"
args=["-e", "%CODE%"]
seccomp_profile="lang_perl"

[language."perl2"]
bin="/langs/perl2/bin/perl"
args=["-e", "%CODE%"]
seccomp_profile="lang_perl"

# -> % ls ~/bots/perlbuut/langs
# node-custom  perl-1.0.16  perl2  perl3  test.log

[language."perl3"]
bin="/langs/perl3/bin/perl"
args=["-e", "%CODE%"]
seccomp_profile="lang_perl"

[language."perl4"]
bin="/perl5/perlbrew/perls/perl-4.036/bin/perl"
args=["-e", "%CODE%"]
seccomp_profile="lang_perl"

[language."perl5.0"]
bin="/langs/perl-5.000/bin/perl5.000"
args=["-e", "%CODE%"]
seccomp_profile="lang_perl"

[language."perl5.1"]
bin="/langs/perl-5.001/bin/perl5.001"
args=["-e", "%CODE%"]
seccomp_profile="lang_perl"

[language."perl5.2"]
bin="/langs/perl-5.002/bin/perl5.00201"
args=["-e", "%CODE%"]
seccomp_profile="lang_perl"

[language."perl5.3"]
bin="/langs/perl-5.003/bin/perl"
args=["-e", "%CODE%"]
seccomp_profile="lang_perl"

[language."perl5.4"]
bin="/langs/perl-5.004/bin/perl"
args=["-e", "%CODE%"]
seccomp_profile="lang_perl"

[language."perl5.5"]
bin="/perl5/perlbrew/perls/perl-5.005_04/bin/perl"
args=["-e", "%CODE%"]
#wrap_code="perl_wrap"
seccomp_profile="lang_perl"

[language."perl5.6"]
bin="/perl5/perlbrew/perls/perl-5.6.2/bin/perl"
args=["-e", "%CODE%"]
wrap_code="perl_wrap"
seccomp_profile="lang_perl"

[language."perl5.6t"]
bin="/perl5/perlbrew/perls/perlbot-threaded-5.6.2/bin/perl"
args=["-e", "%CODE%"]
wrap_code="perl_wrap"
seccomp_profile="lang_perl"

[language."perl5.8"]
bin="/perl5/perlbrew/perls/perl-5.8.9/bin/perl"
args=["-e", "%CODE%"]
wrap_code="perl_wrap"
seccomp_profile="lang_perl"

[language."perl5.8.8"]
bin="/perl5/perlbrew/perls/perlbot-5.8.8/bin/perl"
args=["-e", "%CODE%"]
wrap_code="perl_wrap"
seccomp_profile="lang_perl"

[language."perl5.10"]
bin="/perl5/perlbrew/perls/perl-5.10.1/bin/perl"
args=["-e", "%CODE%"]
wrap_code="perl_wrap"
seccomp_profile="lang_perl"

[language."perl5.10.0"]
bin="/perl5/perlbrew/perls/perlbot-5.10.0/bin/perl"
args=["-e", "%CODE%"]
wrap_code="perl_wrap"
seccomp_profile="lang_perl"

[language."perl5.12"]
bin="/perl5/perlbrew/perls/perl-5.12.5/bin/perl"
args=["-e", "%CODE%"]
wrap_code="perl_wrap"
seccomp_profile="lang_perl"

[language."perl5.14"]
bin="/perl5/perlbrew/perls/perl-5.14.4/bin/perl"
args=["-e", "%CODE%"]
wrap_code="perl_wrap"
seccomp_profile="lang_perl"

[language."perl5.16"]
bin="/perl5/perlbrew/perls/perl-5.16.3/bin/perl"
args=["-e", "%CODE%"]
wrap_code="perl_wrap"
seccomp_profile="lang_perl"

[language."perl5.18"]
bin="/perl5/perlbrew/perls/perl-5.18.4/bin/perl"
args=["-e", "%CODE%"]
wrap_code="perl_wrap"
seccomp_profile="lang_perl"

[language."perl5.20"]
bin="/perl5/perlbrew/perls/perl-5.20.3/bin/perl"
args=["-e", "%CODE%"]
wrap_code="perl_wrap"
seccomp_profile="lang_perl"

[language."perl5.22"]
bin="/perl5/perlbrew/perls/perl-5.22.3/bin/perl"
args=["-e", "%CODE%"]
wrap_code="perl_wrap"
seccomp_profile="lang_perl"

[language."perl5.24"]
bin="/perl5/perlbrew/perls/perl-5.24.0/bin/perl"
args=["-e", "%CODE%"]
wrap_code="perl_wrap"
seccomp_profile="lang_perl"

[language."perl5.26"]
bin="/perl5/perlbrew/perls/perlbot-5.26.1/bin/perl"
args=["-e", "%CODE%"]
wrap_code="perl_wrap"
seccomp_profile="lang_perl"

[language."perl5.28"]
bin="/perl5/perlbrew/perls/perlbot-5.28.1/bin/perl"
args=["-e", "%CODE%"]
wrap_code="perl_wrap"
seccomp_profile="lang_perl"

# Threaded perls
[language."perl5.8t"]
bin="/perl5/perlbrew/perls/perlbot-5.8t/bin/perl"
args=["-e", "%CODE%"]
wrap_code="perl_wrap"
seccomp_profile="lang_perl"

[language."perl5.10t"]
bin="/perl5/perlbrew/perls/perlbot-5.10t/bin/perl"
args=["-e", "%CODE%"]
wrap_code="perl_wrap"
seccomp_profile="lang_perl"

[language."perl5.12t"]
bin="/perl5/perlbrew/perls/perlbot-5.12t/bin/perl"
args=["-e", "%CODE%"]
wrap_code="perl_wrap"
seccomp_profile="lang_perl"

[language."perl5.14t"]
bin="/perl5/perlbrew/perls/perlbot-5.14/bin/perl"
args=["-e", "%CODE%"]
wrap_code="perl_wrap"
seccomp_profile="lang_perl"

[language."perl5.16t"]
bin="/perl5/perlbrew/perls/perlbot-5.16t/bin/perl"
args=["-e", "%CODE%"]
wrap_code="perl_wrap"
seccomp_profile="lang_perl"

[language."perl5.18t"]
bin="/perl5/perlbrew/perls/perlbot-5.18t/bin/perl"
args=["-e", "%CODE%"]
wrap_code="perl_wrap"
seccomp_profile="lang_perl"

[language."perl5.20t"]
bin="/perl5/perlbrew/perls/perlbot-5.20t/bin/perl"
args=["-e", "%CODE%"]
wrap_code="perl_wrap"
seccomp_profile="lang_perl"

[language."perl5.22t"]
bin="/perl5/perlbrew/perls/perlbot-5.22t/bin/perl"
args=["-e", "%CODE%"]
wrap_code="perl_wrap"
seccomp_profile="lang_perl"

[language."perl5.24t"]
bin="/perl5/perlbrew/perls/perlbot-5.24t/bin/perl"
args=["-e", "%CODE%"]
wrap_code="perl_wrap"
seccomp_profile="lang_perl"

[language."perl5.26t"]
bin="/perl5/perlbrew/perls/perlbot-5.26t/bin/perl"
args=["-e", "%CODE%"]
wrap_code="perl_wrap"
seccomp_profile="lang_perl"

[language."perl5.28t"]
bin="/perl5/perlbrew/perls/perlbot-5.28t/bin/perl"
args=["-e", "%CODE%"]
wrap_code="perl_wrap"
seccomp_profile="lang_perl"

# Other

[language."cperl"]
bin="/perl5/perlbrew/perls/perlbot-cperl-5.26/bin/perl"
args=["-e", "%CODE%"]
wrap_code="perl_wrap"
seccomp_profile="lang_perl"

[language."perl6"]
# exec /langs/perl6/bin/moar  --execname="$0" --libpath="/langs/perl6/share/nqp/lib" --libpath="/langs/perl6/share/nqp/lib" --libpath="/langs/perl6/share/perl6/lib" --libpath="/langs/perl6/share/perl6/runtime" /langs/perl6/share/perl6/runtime/perl6.moarvm "$@"
bin="/langs/perl6/bin/moar"
args=["--execname=perl6", "--libpath=/langs/perl6/share/nqp/lib", "--libpath=/langs/perl6/share/nqp/lib", "--libpath=/langs/perl6/share/perl6/lib", "--libpath=/langs/perl6/share/perl6/runtime", "/langs/perl6/share/perl6/runtime/perl6.moarvm", "%FILE%"]
seccomp_profile="lang_perl6"

[language.ruby]
bin="/usr/bin/ruby2.3"
args=["%FILE%"]
seccomp_profile="lang_ruby"

[language.javascript]
bin="/langs/node-custom/bin/node"
args=["--v8-pool-size=1", "%FILE%"]
seccomp_profile="lang_javascript"

[language.cobol]
sub="compile_cobol"
seccomp_profile="lang_cobol"

[language.tcc]
bin="/langs/tcc/bin/tcc"
args=["-run", "%FILE%"]
seccomp_profile="lang_tcc"

[language.bash]
bin="/bin/bash"
args=["%FILE%"]
seccomp_profile="lang_perl"
